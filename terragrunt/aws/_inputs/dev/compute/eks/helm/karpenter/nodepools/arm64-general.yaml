apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: arm64-general
spec:
  template:
    metadata:
      labels:
        workload: general
        arch: arm64
        processor: graviton
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: arm64-general
      expireAfter: 96h # 4 days
      # Keep slightly above pod terminationGracePeriodSeconds (60s) to allow drain/eviction and finalizers
      terminationGracePeriod: "2m"
      # Scheduling constraints for dev: linux/arm64 Graviton on Spot, general-purpose families
      requirements:
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: kubernetes.io/arch
          operator: In
          values: ["arm64"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["t4g", "m6g", "m7g"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["us-east-1a", "us-east-1b", "us-east-1c"]
        # Exclude very small burst types for dev workloads
        - key: karpenter.k8s.aws/instance-size
          operator: NotIn
          values: ["nano", "micro"]
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    # The amount of time Karpenter should wait to consolidate a node after a pod has been added or removed from the node.
    # You can choose to disable consolidation entirely by setting the string value 'Never' here
    consolidateAfter: 10m
    budgets:
      - nodes: 10%
        reasons:
          - "Empty"
          - "Underutilized"
          - "Drifted"
      - nodes: "2"
  limits:
    cpu: "256"
    memory: "512Gi"
  weight: 20
